#include "pch.h"
#include "game_level_object_container.h"

game_level_object_container::game_level_object_container()
{
}

auto game_level_object_container::Initialize(ID2D1RenderTarget* renderTarget, IDWriteFactory* dwriteFactory) -> void
{
  m_levelObjectContainer.Initialize(renderTarget, dwriteFactory);
  m_levelObjectContainer.AppendOverlayObject(m_mouseCursor);
}

auto game_level_object_container::AddPlayer(float x, float y) -> void
{
  m_player = std::make_unique<player_ship>();
  m_player->SetPosition(x, y);
  m_levelObjectContainer.AppendOverlayObject(*m_player);
}

auto game_level_object_container::AddTimer(int timelimitSeconds) -> void
{
}

auto game_level_object_container::AddStatus() -> void
{

}

auto game_level_object_container::AddIsland(const game_closed_object& closedObject) -> void
{
  m_levelObjectContainer.AppendActiveObject(level_island { closedObject });
}

auto game_level_object_container::AddTarget(float x, float y) -> void
{
  m_levelObjectContainer.AppendActiveObject(target_state { x, y });
}

auto game_level_object_container::UpdateMouseCursor(float x, float y) -> void
{
  m_mouseCursor.SetPosition(x, y);
}

auto game_level_object_container::UpdatePlayer(const level_control_state& controlState) -> void
{
}
